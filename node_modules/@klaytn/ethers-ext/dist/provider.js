"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Web3Provider = exports.JsonRpcProvider = void 0;
const providers_1 = require("@ethersproject/providers");
const js_ext_core_1 = require("@klaytn/js-ext-core");
// @ts-ignore: package @klaytn/web3rpc has no .d.ts file.
const web3rpc_1 = require("@klaytn/web3rpc");
const signer_1 = require("./signer");
/* eslint-disable no-multi-spaces */
class JsonRpcProvider extends providers_1.JsonRpcProvider {
    constructor(url, network) {
        super(url, network);
        const send = (method, params) => {
            return this.send(method, params);
        };
        this.admin = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.AdminApi);
        this.debug = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.DebugApi);
        this.governance = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.GovernanceApi);
        this.klay = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.KlayApi);
        this.net = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.NetApi);
        this.personal = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.PersonalApi);
        this.txpool = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.TxpoolApi);
    }
}
exports.JsonRpcProvider = JsonRpcProvider;
class Web3Provider extends providers_1.Web3Provider {
    constructor(provider, network) {
        super(provider, network);
        const send = (method, params) => {
            return this.send(method, params);
        };
        this.admin = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.AdminApi);
        this.debug = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.DebugApi);
        this.governance = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.GovernanceApi);
        this.klay = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.KlayApi);
        this.net = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.NetApi);
        this.personal = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.PersonalApi);
        this.txpool = (0, js_ext_core_1.asyncOpenApi)(send, web3rpc_1.TxpoolApi);
    }
    getSigner(addressOrIndex) {
        return new signer_1.JsonRpcSigner(this, addressOrIndex);
    }
}
exports.Web3Provider = Web3Provider;
//# sourceMappingURL=provider.js.map